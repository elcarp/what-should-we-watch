{"version":3,"sources":["table.js","App.js","useData.js","reportWebVitals.js","index.js"],"names":["Table","fields","data","map","watchList","newData","filter","workingTitle","workingTitlePaul","className","id","imdbRating","runTime","titleType","Airtable","apiKey","process","base","axios","defaults","baseURL","headers","post","App","useState","setData","getData","a","get","then","res","records","useData","useEffect","onPageLoad","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAmCeA,EAjCD,SAAC,GAAc,IACtBC,EADqB,EAAXC,KACIC,KAAI,SAACC,GACxB,OAAOA,EAAUH,UAGZI,EACLJ,GACAA,EAAOK,QACN,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,iBAAjB,OACCD,EAAa,IAAMC,EAAiB,MAGvC,OACC,mCACEH,EAAQF,KAAI,SAACC,GACb,OACC,mCACC,qBAAKK,UAAU,qBAAf,SACC,sBAAKA,UAAU,aAAf,UACC,oBAAIC,GAAG,QAAP,SAAgBN,EAAUG,eAC1B,uBAAMG,GAAG,SAAT,0BACc,iCAASN,EAAUO,gBAEjC,uBAAMD,GAAG,SAAT,UAAmBN,EAAUQ,QAA7B,UACA,sBAAMF,GAAG,SAAT,SAAmBN,EAAUS,yBCnBrC,IAAIC,IAAS,CAAEC,OAAO,GAAD,OAAKC,uBAA4CC,KACrED,qBAGDE,IAAMC,SAASC,QAAf,sCAAwDJ,oBAAxD,YADgB,WAChB,KACAE,IAAMC,SAASE,QAAQC,KAAK,gBAAkB,mBAC9CJ,IAAMC,SAASE,QAAf,+BAEcL,qBA4BCO,MA1Bf,WAAgB,IAAD,ECfA,WAAoB,IAAD,EACTC,mBAAS,MADA,mBAC1BtB,EAD0B,KACpBuB,EADoB,KAMjC,MAAO,CACNC,QAJY,uCAAG,sBAAAC,EAAA,+EACRT,IAAMU,IAAI,KAAKC,MAAK,SAACC,GAAD,OAASL,EAAQK,EAAI5B,KAAK6B,aADtC,2CAAH,qDAKZ7B,QDQyB8B,GAAlB9B,EADM,EACNA,KAAMwB,EADA,EACAA,QAQd,OAPAO,qBAAU,WAAM,4CACf,sBAAAN,EAAA,sEACOD,IADP,4CADe,uBAAC,WAAD,wBAIfQ,KACE,IAGF,qBAAKzB,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACC,gEACA,2DACA,8BACEP,GACA,qBAAKO,UAAU,eAAf,SACC,cAAC,EAAD,CAAOP,KAAMA,cEtBLiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.15210c09.chunk.js","sourcesContent":["import React from 'react'\n\nconst Table = ({ data }) => {\n\tconst fields = data.map((watchList) => {\n\t\treturn watchList.fields\n\t})\n\n\tconst newData =\n\t\tfields &&\n\t\tfields.filter(\n\t\t\t({ workingTitle, workingTitlePaul }) =>\n\t\t\t\tworkingTitle[0] == workingTitlePaul[0]\n\t\t)\n\n\treturn (\n\t\t<>\n\t\t\t{newData.map((watchList) => {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className='movieWrapper block'>\n\t\t\t\t\t\t\t<div className='inner-wrap'>\n\t\t\t\t\t\t\t\t<h3 id='title'>{watchList.workingTitle}</h3>\n\t\t\t\t\t\t\t\t<span id='rating'>\n\t\t\t\t\t\t\t\t\timdb rating: <strong>{watchList.imdbRating}</strong>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span id='rating'>{watchList.runTime} min</span>\n\t\t\t\t\t\t\t\t<span id='rating'>{watchList.titleType}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\nexport default Table\n","import './App.css'\nimport Airtable from 'airtable'\nimport axios from 'axios'\nimport useData from './useData'\nimport { useEffect } from 'react'\nimport Table from './table'\n\nnew Airtable({ apiKey: `${process.env.REACT_APP_AIRTABLE_API_KEY}` }).base(\n\tprocess.env.REACT_APP_AIRTABLE_BASE_ID\n)\nlet tableName = 'junction'\naxios.defaults.baseURL = `https://api.airtable.com/v0/${process.env.REACT_APP_AIRTABLE_BASE_ID}/${tableName}/`\naxios.defaults.headers.post['Content-Type'] = 'application/json'\naxios.defaults.headers[\n\t'Authorization'\n] = `Bearer ${process.env.REACT_APP_AIRTABLE_API_KEY}`\n\nfunction App() {\n\tconst { data, getData } = useData()\n\tuseEffect(() => {\n\t\tasync function onPageLoad() {\n\t\t\tawait getData()\n\t\t}\n\t\tonPageLoad()\n\t}, [])\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header className='App-header'>\n\t\t\t\t<h1>What should Lise & Paul watch?</h1>\n\t\t\t\t<div>Here's what we agree on:</div>\n\t\t\t\t<div>\n\t\t\t\t\t{data && (\n\t\t\t\t\t\t<div className='wrapper flex'>\n\t\t\t\t\t\t\t<Table data={data} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { useState } from 'react'\nimport axios from 'axios'\nexport default function useData() {\n\tconst [data, setData] = useState(null)\n\n\tconst getData = async () => {\n\t\treturn axios.get('/').then((res) => setData(res.data.records))\n\t}\n\treturn {\n\t\tgetData,\n\t\tdata,\n\t}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}